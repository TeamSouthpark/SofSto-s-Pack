# Configuration file

clientside {
    # Wether to display the dragon on the main menu or not
    B:customMainMenu=true
}


cyclopes {
    # How far away cyclopes will detect sheep being hurt.
    I:cyclopesSheepSearchLength=17

    # Wether to spawn cyclops caves or not
    B:generateCyclopsCaves=true
}


"death worms" {
    # Death worm spawn weight. Lower = lower chance to spawn.
    I:deathWormSpawnRate=5

    # How many blocks away can death worms spot potential prey. Note that increasing this could cause lag.
    I:deathWormTargetSearchLength=64

    # True if death worms are allowed to spawn.
    B:spawnDeathWorm=true
}


dragons {
    # True if dragons can despawn. Note that if this is false there may be SERIOUS lag issues.
    B:canDragonsDespawn=true

    # Max dragon attack damage. Attack Damage is scaled to this
    I:dragonAttackDamage=17

    # Dragon Flap Noise Distance - Larger number, further away you can hear it
    I:dragonFlapNoiseDistance=4

    # Dragon Flute Distance - how many chunks away is the dragon flute effective?
    I:dragonFluteDistance=8

    # How far away dragons will detect gold blocks being destroyed or chests being opened.
    I:dragonGoldSearchLength=17

    # Dragon griefing - 2 is no griefing, 1 is breaking weak blocks, 0 is default
    I:dragonGriefing=0

    # Max dragon health. Health is scaled to this
    I:dragonHealth=500

    # Modifier of how far 3rd person distance is whilst riding a dragon, scaled against size.
    D:dragonRiding3rdPersonDistanceModifier=0.800000011920929

    # How many blocks away can dragons spot potential prey. Note that increasing this could cause lag.
    I:dragonTargetSearchLength=64

    # How high dragons can fly, in Y height.
    I:maxDragonFlight=128
}


generation {
    # Dragons cannot spawn in these dimensions' IDs
    I:dragonBlacklistedDimensions <
        1
        -1
     >

    # 1 out of this number chance per block that gold will generate in dragon lairs.
    I:dragonDenGoldAmount=4

    # Dragons can only spawn in these dimensions' IDs
    I:dragonWhitelistedDimensions <
        0
     >

    # 1 out of this number chance per chunk for generation
    I:generateDragonDenChance=180
    B:generateDragonDens=true

    # 1 out of this number chance per chunk for generation
    I:generateDragonRoostChance=360
    B:generateDragonRoosts=true

    # 1 out of this number chance per chunk for generation
    I:generateDragonSkeletonChance=150

    # Generate dragon skeletons in hot biomes?
    B:generateDragonSkeletons=true
    B:generateSapphireOre=true
    B:generateSilverOre=true

    # 1 out of this number chance per chunk for generation
    I:generateSirenChance=300

    # 1 out of this number chance per chunk for generation
    I:generateSnowVillageChance=100
    B:generateSnowVillages=true

    # glacier biome spawn weight - lower = rarer
    I:glacierSpawnChance=4

    # Ratio of Stone(this number) to Ores in Dragon Caves
    I:oreToStoneRatioForDragonCaves=45

    # Snow Villages cannot spawn in these dimensions' IDs
    I:snowVillageBlacklistedDimensions <
        1
        -1
     >

    # Snow Villages can only spawn in these dimensions' IDs
    I:snowVillageWhitelistedDimensions <
        0
     >

    # 1 out of this number chance per chunk for generation
    I:spawnCyclopsChance=80

    # true if glacier biomes can spawn
    B:spawnGlaciers=true

    # 1 out of this number chance per chunk for generation
    I:spawnGorgonsChance=80

    # true to use Blacklist configs, false to use Whitelist configs
    B:useDimensionBlackList=true
}


gorgons {
    # Wether to spawn gorgon structures or not
    B:spawnGorgons=true
}


hippocampi {
    # True if hippocampi are allowed to spawn.
    B:spawnHippocampus=true
}


hippogryphs {
    # Hippogryph spawn weight. Lower = lower chance to spawn.
    I:hippogryphSpawnRate=5

    # True if hippogryphs are allowed to spawn.
    B:spawnHippogryphs=true
}


pixies {
    # The size of pixie villages.
    I:pixieVillageSize=5

    # Wether to spawn pixie villages or not
    B:spawnPixies=true

    # 1 out of this number chance per chunk for generation
    I:spawnPixiesChance=60
}


sirens {
    # Wether to spawn siren islands caves or not
    B:generateSirenIslands=true
}


